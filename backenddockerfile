# 使用 Python 3.9 作为基础镜像
FROM python:3.9-slim

# 设置工作目录
WORKDIR /app

# 设置 Python 环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PATH="/app/.local/bin:$PATH"

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 复制依赖文件
COPY backend/requirements.txt .

# 安装基础 Python 工具
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# 安装 Python 依赖
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir \
    uvicorn[standard] \
    gunicorn \
    fastapi \
    sqlalchemy \
    psycopg2-binary \
    alembic \
    python-dotenv \
    pydantic[email] \
    python-jose[cryptography] \
    passlib[bcrypt] \
    python-multipart \
    aiohttp \
    pandas \
    numpy

# 复制源代码
COPY backend .

# 显示目录结构
RUN echo "Current directory structure:" && \
    ls -la && \
    echo "\nPython path:" && \
    python -c "import sys; print('\n'.join(sys.path))"

# 暴露端口
EXPOSE 8000

# 创建启动脚本
RUN echo '#!/bin/sh\n\
echo "Waiting for database..."\n\
while ! nc -z postgres.railway.internal 5432; do\n\
  echo "Database is unavailable - sleeping"\n\
  sleep 2\n\
done\n\
echo "Database is up - executing migrations"\n\
alembic upgrade head\n\
echo "Starting application"\n\
uvicorn app.main:app --host 0.0.0.0 --port 8000\n\
' > /app/start.sh && chmod +x /app/start.sh

# 启动命令
CMD ["/app/start.sh"] 